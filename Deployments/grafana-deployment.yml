apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-configmap
data:
  prometheus.yaml: |-
    {
        "apiVersion": 1,
        "datasources": [
            {
               "access":"proxy",
                "editable": true,
                "name": "Prometheus",
                "type": "prometheus",
                "url": "http://prometheus-service.default.svc.cluster.local:9090",
                "version": 1
            }
        ]
    }

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  labels:
    app: grafana
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-deployment
  template:
    metadata:
      name: grafana-deployment
      labels:
        app: grafana-deployment
    spec:
      containers:
      - name: grafana-deployment
        image: grafana/grafana
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-volume
          - mountPath: /etc/grafana/provisioning/datasources
            name: grafana-configmap
      volumes:
        - name: grafana-volume
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-configmap
          configMap:
            name: grafana-configmap
      securityContext:
        runAsUser: 0

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector: 
    app: grafana-deployment
  type: LoadBalancer  
  ports:
    - port: 3000
      targetPort: 3000